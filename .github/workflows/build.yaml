name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: darwin
            arch: amd64
          - os: darwin
            arch: arm64
          - os: windows
            arch: amd64
          - os: windows
            arch: 386

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Go
        run: |
          wget https://golang.org/dl/go1.21.0.${{ matrix.os == 'windows' && 'windows-amd64' || 'linux-amd64' }}.tar.gz
          sudo tar -C /usr/local -xzf go1.21.0.${{ matrix.os == 'windows' && 'windows-amd64' || 'linux-amd64' }}.tar.gz
          export PATH=$PATH:/usr/local/go/bin

      - name: Set up Go
        run: |
          go version

      - name: Build
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          mkdir -p dist
          /usr/local/go/bin/go build -o dist/go_showstart_${{ matrix.os }}_${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: go_showstart_${{ matrix.os }}_${{ matrix.arch }}
          path: dist/go_showstart_${{ matrix.os }}_${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Generate tag
        id: vars
        run: echo "TAG=$(date +'%Y%m%d%H%M%S')-${{ github.sha }}" >> $GITHUB_ENV

      - name: Trim SHA
        id: trim_sha
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}-${{ env.SHORT_SHA }}
          release_name: "Release ${{ env.TAG }}-${{ env.SHORT_SHA }}"
          body: |
            This is an automated release built from commit ${{ github.sha }}.

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: go_showstart_darwin_amd64
          path: ./dist

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: go_showstart_darwin_arm64
          path: ./dist

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: go_showstart_windows_amd64
          path: ./dist

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: go_showstart_windows_386
          path: ./dist

      - name: Upload Release Assets (Darwin AMD64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/go_showstart_darwin_amd64
          asset_name: go_showstart_darwin_amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Assets (Darwin ARM64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/go_showstart_darwin_arm64
          asset_name: go_showstart_darwin_arm64
          asset_content_type: application/octet-stream

      - name: Upload Release Assets (Windows AMD64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/go_showstart_windows_amd64.exe
          asset_name: go_showstart_windows_amd64.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Assets (Windows 386)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/go_showstart_windows_386.exe
          asset_name: go_showstart_windows_386.exe
          asset_content_type: application/octet-stream