name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Go
        run: |
          wget https://golang.org/dl/go1.21.0.linux-amd64.tar.gz
          sudo tar -C /usr/local -xzf go1.21.0.linux-amd64.tar.gz
          export PATH=$PATH:/usr/local/go/bin

      - name: Set up Go
        run: |
          go version

      - name: Build
        run: |
          mkdir -p dist
          for os in darwin windows; do
            for arch in amd64 arm64 386; do
              if [ "$os" = "windows" ] && [ "$arch" = "arm64" ]; then continue; fi
              if [ "$os" = "darwin" ] && [ "$arch" = "386" ]; then continue; fi
              export GOOS=$os
              export GOARCH=$arch
              /usr/local/go/bin/go build -o dist/go_showstart_${os}_${arch}${[ "$os" = "windows" ] && echo '.exe' || ''}
            done
          done

      - name: List dist directory
        run: ls -la dist/

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: go_showstart
          path: dist/

      - name: Generate tag
        id: vars
        run: echo "TAG=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          release_name: "Release ${{ env.TAG }}"
          body: |
            This is an automated release built from commit ${{ github.sha }}.

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/go_showstart_darwin_amd64
          asset_name: go_showstart_darwin_amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/go_showstart_darwin_arm64
          asset_name: go_showstart_darwin_arm64
          asset_content_type: application/octet-stream

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/go_showstart_windows_amd64
          asset_name: go_showstart_windows_amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/go_showstart_windows_386
          asset_name: go_showstart_windows_386
          asset_content_type: application/octet-stream