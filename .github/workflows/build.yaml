name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.0

      - name: Set up Go
        run: |
          go version

      - name: Build for macOS AMD64
        run: |
          mkdir -p dist
          GOOS=darwin GOARCH=amd64 go build -o dist/go_showstart_darwin_amd64

      - name: Build for macOS ARM64
        run: |
          GOOS=darwin GOARCH=arm64 go build -o dist/go_showstart_darwin_arm64

      - name: Build for Windows AMD64
        run: |
          GOOS=windows GOARCH=amd64 go build -o dist/go_showstart_windows_amd64.exe

      - name: Build for Windows 386
        run: |
          GOOS=windows GOARCH=386 go build -o dist/go_showstart_windows_386.exe

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: go_showstart_artifacts
          path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Generate tag
        id: vars
        run: echo "TAG=$(date +'%Y%m%d%H%M%S')-${{ github.sha }}" >> $GITHUB_ENV

      - name: Trim SHA
        id: trim_sha
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}-${{ env.SHORT_SHA }}
          release_name: "Release ${{ env.TAG }}-${{ env.SHORT_SHA }}"
          body: |
            This is an automated release built from commit ${{ github.sha }}.

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: go_showstart_artifacts
          path: ./dist

      - name: Upload Release Assets (Darwin AMD64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/go_showstart_darwin_amd64
          asset_name: go_showstart_darwin_amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Assets (Darwin ARM64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/go_showstart_darwin_arm64
          asset_name: go_showstart_darwin_arm64
          asset_content_type: application/octet-stream

      - name: Upload Release Assets (Windows AMD64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/go_showstart_windows_amd64.exe
          asset_name: go_showstart_windows_amd64.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Assets (Windows 386)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/go_showstart_windows_386.exe
          asset_name: go_showstart_windows_386.exe
          asset_content_type: application/octet-stream